apiVersion: v1
kind: Template
metadata:
  name: wso2-apim
parameters:
- name: APP_NAME
  required: true
- name: WSO2_HOME
  required: true
  value: /opt/wso2
- name: APP_HOSTNAME
  value: ''
- name: S2I_SOURCE_REPO
  value: https://github.com/andreessen/wso2apim-openshift-example
- name: S2I_SOURCE_REF
  value: master 
- name: S2I_SOURCE_CONTEXT_DIR
  value: .
- name: BUILD_STRATEGY
  description: 'It could be two strategies: source or docker'
  from: '[sourcedk]'
  value: docker
- name: WSO2_MEMORY_LIMIT
  value: 1536Mi
- name: WSO2_CPU_LIMIT
  value: '2'
- name: WSO2_APIM_VERSION
  value: wso2am-2.6.0
- name: WSO2_APIM_DISTRIB_HOST
  value: sb57.emdev.ru
- name: WSO2_APIM_URL
  value: ${APP_NAME}-wso2apim.apps.devops.su
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    lookupPolicy:
      local: false
    tags:
    - from:
        kind: DockerImage
        name: ${APP_NAME}:latest
      name: latest
      referencePolicy:
        type: ""           
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    resources:
      limits:
        memory: 512Mi
        cpu: 500m
      requests:
        memory: 256Mi
        cpu: 200m
    output:
      to:
        kind: ImageStreamTag
        name: ${APP_NAME}:latest
    source:
      contextDir: ${S2I_SOURCE_CONTEXT_DIR}
      git:
        ref: ${S2I_SOURCE_REF}
        uri: ${S2I_SOURCE_REPO}
      type: Git
    strategy:
      ${BUILD_STRATEGY}Strategy:
        env:
        - name: WSO2_HOME
          value: ${WSO2_HOME}
        - name: JAVA_APP_DIR
          value: ${JAVA_APP_DIR} 
        - name: WSO2_APIM_VERSION
          value: ${WSO2_APIM_VERSION}
        - name: WSO2_APIM_DISTRIB_HOST
          value: ${WSO2_APIM_DISTRIB_HOST}
        - name: WSO2_APIM_URL
          value: ${WSO2_APIM_URL}  
      type: ${BUILD_STRATEGY}
    triggers:
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    replicas: 1
    selector:
      app: ${APP_NAME}
      deploymentconfig: ${APP_NAME}
      liferay: ""
    strategy:
      activeDeadlineSeconds: 21600
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: ${APP_NAME}
          deploymentconfig: ${APP_NAME}
          liferay: ""
      spec:
        containers:
        - env:
          - name: JAVA_APP_DIR
            value: ${JAVA_APP_DIR} 
          - name: WSO2_APIM_VERSION
            value: ${WSO2_APIM_VERSION}
          - name: WSO2_APIM_DISTRIB_HOST
            value: ${WSO2_APIM_DISTRIB_HOST}
          - name: WSO2_APIM_URL
            value: ${WSO2_APIM_URL}
          image: ' '
          imagePullPolicy: Always
          name: ${APP_NAME}
          ports:
          - containerPort: 9443
            protocol: TCP
          resources:
            limits:
              cpu: ${WSO2_CPU_LIMIT}
              memory: ${WSO2_MEMORY_LIMIT}
          volumeMounts: {}
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        volumes: {}
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APP_NAME}
        from:
          kind: ImageStreamTag
          name: ${APP_NAME}:latest
      type: ImageChange     
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    ports:
    - name: 9443-tcp
      port: 8080
      protocol: TCP
      targetPort: 9443
    selector:
      app: ${APP_NAME}
      deploymentconfig: ${APP_NAME}
      liferay: ""
    sessionAffinity: None
    type: ClusterIP            
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    host: ${APP_HOSTNAME}
    port:
      targetPort: 9443-tcp
    tls:
      termination: passthrough
    to:
      kind: Service
      name: ${APP_NAME}
      weight: 100      
